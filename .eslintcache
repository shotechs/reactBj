[{"D:\\code\\js\\react\\bj\\src\\index.js":"1","D:\\code\\js\\react\\bj\\src\\App.js":"2","D:\\code\\js\\react\\bj\\src\\reportWebVitals.js":"3","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Reg.js":"4","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Login.js":"5","D:\\code\\js\\react\\bj\\src\\components\\pay\\Pay.js":"6","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Profile.js":"7","D:\\code\\js\\react\\bj\\src\\components\\accounts\\User.js":"8","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Setting.js":"9","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Change.js":"10","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Pay.js":"11","D:\\code\\js\\react\\bj\\src\\reducers\\userReducer.js":"12","D:\\code\\js\\react\\bj\\src\\components\\page\\About.js":"13","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Forgot.js":"14","D:\\code\\js\\react\\bj\\src\\components\\page\\Header.js":"15","D:\\code\\js\\react\\bj\\src\\components\\game\\Help.js":"16","D:\\code\\js\\react\\bj\\src\\components\\game\\Game.js":"17","D:\\code\\js\\react\\bj\\src\\components\\game\\BetDownBtn.js":"18","D:\\code\\js\\react\\bj\\src\\components\\game\\BetUpBtn.js":"19","D:\\code\\js\\react\\bj\\src\\components\\game\\DDBtn.js":"20","D:\\code\\js\\react\\bj\\src\\components\\game\\DealBtn.js":"21","D:\\code\\js\\react\\bj\\src\\components\\game\\StandBtn.js":"22","D:\\code\\js\\react\\bj\\src\\components\\game\\SplitBtn.js":"23","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Cash.js":"24","D:\\code\\js\\react\\bj\\src\\components\\game\\Dealer.js":"25"},{"size":509,"mtime":1622456341843,"results":"26","hashOfConfig":"27"},{"size":6183,"mtime":1624002224216,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1613493371000,"results":"29","hashOfConfig":"27"},{"size":9260,"mtime":1621728312819,"results":"30","hashOfConfig":"27"},{"size":6859,"mtime":1624371754370,"results":"31","hashOfConfig":"27"},{"size":149,"mtime":1621573075517,"results":"32","hashOfConfig":"27"},{"size":5709,"mtime":1621761613586,"results":"33","hashOfConfig":"27"},{"size":18402,"mtime":1621831181913,"results":"34","hashOfConfig":"27"},{"size":10625,"mtime":1621658456668,"results":"35","hashOfConfig":"27"},{"size":3527,"mtime":1621658661679,"results":"36","hashOfConfig":"27"},{"size":2957,"mtime":1621655941530,"results":"37","hashOfConfig":"27"},{"size":634,"mtime":1621816008575,"results":"38","hashOfConfig":"27"},{"size":186,"mtime":1624001234716,"results":"39","hashOfConfig":"27"},{"size":3031,"mtime":1624001900884,"results":"40","hashOfConfig":"27"},{"size":4141,"mtime":1624002420595,"results":"41","hashOfConfig":"27"},{"size":7127,"mtime":1624002288824,"results":"42","hashOfConfig":"27"},{"size":16585,"mtime":1624002617047,"results":"43","hashOfConfig":"27"},{"size":372,"mtime":1624002650430,"results":"44","hashOfConfig":"27"},{"size":374,"mtime":1624002657059,"results":"45","hashOfConfig":"27"},{"size":335,"mtime":1624002663575,"results":"46","hashOfConfig":"27"},{"size":326,"mtime":1624002669770,"results":"47","hashOfConfig":"27"},{"size":322,"mtime":1624002679838,"results":"48","hashOfConfig":"27"},{"size":266,"mtime":1624002691584,"results":"49","hashOfConfig":"27"},{"size":179,"mtime":1624001442220,"results":"50","hashOfConfig":"27"},{"size":1262,"mtime":1624001330451,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1a5bmz0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\js\\react\\bj\\src\\index.js",[],["115","116"],"D:\\code\\js\\react\\bj\\src\\App.js",["117","118"],"D:\\code\\js\\react\\bj\\src\\reportWebVitals.js",[],["119","120"],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Reg.js",["121","122","123","124"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaQuestionCircle } from 'react-icons/fa'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ReactComponent as Logo } from '../logo.svg';\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Reg({ userId, username, email, cash, setCash, setemail, setusername, setuserId, setMoneyType }) {\r\n    const appst = 'assets/icons/appStore.png';\r\n    const playst = 'assets/icons/gPlay.png';\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const Register = () => {\r\n        // alert('Error: ' + password + repeatPassword);\r\n\r\n        if (password === repeatPassword) {\r\n            setErrMes('')\r\n            getUser()\r\n            if (userId !== \"\") {\r\n                alert('userId: ' + userId + 'username: ' + username + 'email: ' + email + 'cash: ' + cash);\r\n\r\n                history.push('/profile')\r\n            }\r\n        } else {\r\n            setErrMes('Error: Password does not match repeat Password')\r\n            alert(errMes);\r\n        }\r\n    }\r\n\r\n    const UsernameChange = (event) => {\r\n        setusername1(event.target.value)\r\n    }\r\n\r\n    const PasswordChange = (event) => {\r\n        setpassword(event.target.value)\r\n    }\r\n\r\n    const RepeatPasswordChange = (event) => {\r\n        setrepeatPassword(event.target.value)\r\n    }\r\n\r\n    const EmailChange = (event) => {\r\n        setemail1(event.target.value)\r\n    }\r\n\r\n    const [username1, setusername1] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [repeatPassword, setrepeatPassword] = useState(\"\");\r\n    const [email1, setemail1] = useState(\"\");\r\n    const [errMes, setErrMes] = useState(\"\");\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            // setErrMes(response.text())\r\n            if (response.status === 400) {\r\n\r\n                const msg1 = response.json().then(msg => {\r\n                    // console.log(msg.msg);\r\n                    setErrMes(msg.msg)\r\n                })\r\n\r\n                //  console.log(\"Fetch error 400 \", msg1);\r\n                return response.statusText\r\n            }\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    const getRegisterUrl = \"http://localhost:5000/api/user/register/\";\r\n    const getUser = async () => {\r\n        const data = {\r\n            username: username1,\r\n            email: email1,\r\n            password: password,\r\n\r\n        }\r\n        const res = await fetch(getRegisterUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n        ).then(handleErrors).then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                setusername(data.username)\r\n                setCash(data.cash)\r\n                setMoneyType(data.moneyType)\r\n                setemail(data.email)\r\n                setuserId(data._id)\r\n            },\r\n            )\r\n            .catch((error) => {\r\n                // console.error('Error:', error);\r\n\r\n                if (typeof error.json === \"function\") {\r\n                    error.json().then(jsonError => {\r\n                        console.log(\"Json error from API\");\r\n                        console.log(jsonError);\r\n                    }).catch(genericError => {\r\n                        console.log(\"Generic error from API\");\r\n                        console.log(error.statusText);\r\n                    });\r\n                } else {\r\n                    //  console.log(\"Fetch error\");\r\n                    //  console.log(error);\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-6 d-none d-lg-block p1p \">\r\n                        <Logo className=\"img-thumbnail w95p\" alt=\"Logo\" ></Logo>\r\n                    </div>\r\n                    <div className=\"col border align-self-center bg-light mt-8p mb-8p ml1p\">\r\n                        <div className=\"alert-danger\">{errMes}</div>\r\n                        <Form className=\"mb-2\" onSubmit={() => Register} >\r\n                            <h1 className=\"input-group mb-3 justify-content-center\">BlackJack XXX</h1>\r\n                            <h3 className=\"input-group mb-3 justify-content-center font-weight-light \">Register</h3>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"Username\" className=\"col-sm-12\">\r\n                                    <Form.Label className=\"sr-only\">Display Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"User Name\"\r\n                                        name=\"Username\"\r\n                                        required\r\n                                        aria-label=\"Username\"\r\n                                        minLength=\"3\"\r\n                                        maxLength=\"30\"\r\n                                        title=\"Must contain at least 3-30 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label\r\n                                    className=\"sr-only\">Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    required\r\n                                    minLength=\"5\"\r\n                                    maxLength=\"50\"\r\n                                    title=\"Must contain at least 5 characters\"\r\n                                    name=\"email\" onChange={EmailChange} />\r\n                            </Form.Group>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col-sm-6 \">\r\n                                    <Form.Control\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        aria-label=\"Password\" aria-describedby=\"basic-addon1\"\r\n                                        name=\"password\"\r\n                                        minLength=\"6\"\r\n                                        pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30}$\"\r\n                                        title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8-30 characters\"\r\n                                        required onChange={PasswordChange} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"RepeatPassword\" className=\"col-sm-6 \">\r\n                                    <Form.Control\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Repeat Password\"\r\n                                        aria-label=\"Repeat Password\" aria-describedby=\"basic-addon1\"\r\n                                        name=\"repeatPassword\"\r\n                                        required onChange={RepeatPasswordChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"submit\" className=\"text-center mb-0 d-grid gap-2 \">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Register\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <p>By signing up, you agree to our&nbsp;\r\n     <Link to={{ pathname: \"http://www.sholab.com\" }} target=\"_blank\" className=\"text-black\">Terms</Link>\r\n     ,&nbsp; <Link to={{ pathname: \"http://www.sholab.com\" }} target=\"_blank\" className=\"text-black\">Data Policy</Link>\r\n      &nbsp;and&nbsp; <Link to={{ pathname: \"http://www.sholab.com\" }} target=\"_blank\" className=\"text-black\">Cookies Policy</Link> .</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row  offset-lg-6\">   <div className=\"row tc\">   <h4> Get the app.</h4>  </div>\r\n                    <div className=\"row \">\r\n                        <div className=\"col  \">\r\n                            <img src={appst} alt=\"Logo\" className=\"img-thumbnail\" />\r\n                        </div>\r\n                        <div className=\"col  \">\r\n                            <img src={playst} alt=\"Logo\" className=\"img-thumbnail\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Reg\r\n","D:\\code\\js\\react\\bj\\src\\components\\accounts\\Login.js",["125","126","127"],"D:\\code\\js\\react\\bj\\src\\components\\pay\\Pay.js",[],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Profile.js",["128","129","130","131","132"],"import React from 'react'\r\nimport { FaUsersCog, FaWallet, FaLock, FaTools } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport User from './User';\r\nimport Pay from './Pay';\r\nimport Change from './Change';\r\nimport Setting from './Setting';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Profile({ setUser, loggedInStatus, user, setLoggedInStatus }) {\r\n\r\n\r\n\r\n\r\n    const history = useHistory();\r\n    const [profilePlace, setProfilePlace] = useState(\"profile\");\r\n    const [menuAct, setMenuAct] = useState(\"list-group-item active main-color-bg \");\r\n    const [menuNo, setMenuNo] = useState(\"list-group-item\");\r\n    const [menuSelect, setMenuSelect] = useState(\"profile\");\r\n    //const menuSelect= \"profile\"\r\n\r\n    const checkCash = () => {\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    const MenuSwitcher = (select) => {\r\n        //  profile menu\r\n        // console.log(select)\r\n        if (user.cash > 0) {\r\n            if (select === \"profile\") {\r\n                setMenuSelect(\"profile\")\r\n            } else if (select === \"cash\") {\r\n                setMenuSelect(\"cash\")\r\n            }\r\n            else if (select === \"settings\") {\r\n                setMenuSelect(\"settings\")\r\n            }\r\n            else if (select === \"change\") {\r\n                setMenuSelect(\"change\")\r\n            }\r\n        }\r\n        else {\r\n            setMenuSelect(\"cash\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // const ProfileSwitcher = (select) => {\r\n    //     //  profile menu\r\n    //     if (select === \"profile\") {\r\n    //         setMenuSelect(\"profile\")\r\n    //     } else if (select === \"cash\") {\r\n    //         setMenuSelect(\"cash\")\r\n    //     }\r\n    //     else if (select === \"settings\") {\r\n    //         setMenuSelect(\"settings\")\r\n    //     }\r\n    //     else if (select === \"change\") {\r\n    //         setMenuSelect(\"change\")\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (user === \"\") {\r\n            //console.log(\"no user1\") \r\n            history.push('/')\r\n        }\r\n\r\n        if (user.cash > 0) {\r\n            //  profile menu\r\n            if (profilePlace === \"profile\") {\r\n                setMenuSelect(\"profile\")\r\n            } else if (profilePlace === \"cash\") {\r\n                setMenuSelect(\"cash\")\r\n            }\r\n            else if (profilePlace === \"settings\") {\r\n                setMenuSelect(\"settings\")\r\n            }\r\n            else if (profilePlace === \"change\") {\r\n                setMenuSelect(\"change\")\r\n            }\r\n            //   ProfileSwitcher()\r\n\r\n\r\n            console.log(profilePlace);\r\n\r\n            //  checkCash()\r\n\r\n            setMenuSelect(\"profile\")\r\n        } else {\r\n            setMenuSelect(\"cash\")\r\n        }\r\n        // console.log(profilePlace);\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <header id=\"header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1>\r\n                                <span className=\"glyphicon glyphicon-cog\" aria-hidden=\"true\">\r\n                                    <FaTools />\r\n                                </span> Dashboard <small>Manage Your Settings</small></h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <section id=\"breadcrumb\">\r\n                <div className=\"container\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"active\">Dashboard / {menuSelect.slice(0, 1).toUpperCase() + menuSelect.slice(1, menuSelect.length)} {menuSelect === \"cash\" ? user.cash : \"\"}</li>\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"list-group\">\r\n\r\n                                <Link onClick={() => MenuSwitcher(\"profile\")} to=\"/profile\" className={menuSelect === \"profile\" ? menuAct : menuNo} >  <FaUsersCog className=\"icon\" /> Edit Profile</Link>\r\n                                <Link onClick={() => MenuSwitcher(\"cash\")} to=\"/profile\" className={menuSelect === \"cash\" ? menuAct : menuNo} >  <FaWallet className=\"icon\" /> Buy Tokens</Link>\r\n                                <Link onClick={() => MenuSwitcher(\"settings\")} to=\"/profile\" className={menuSelect === \"settings\" ? menuAct : menuNo} >  <FaUsersCog className=\"icon\" /> Settings</Link>\r\n                                <Link onClick={() => MenuSwitcher(\"change\")} to=\"/profile\" className={menuSelect === \"change\" ? menuAct : menuNo} >  <FaLock className=\"icon\" /> Change Password</Link>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 cBody\">\r\n\r\n\r\n                            {menuSelect === \"profile\" ?\r\n                                <User setLoggedInStatus={setLoggedInStatus}\r\n                                    setUser={setUser}\r\n                                    user={user}\r\n                                    loggedInStatus={loggedInStatus}\r\n                                ></User> : \"\"}\r\n                            {menuSelect === \"cash\" ? <Pay></Pay> : \"\"}\r\n                            {menuSelect === \"settings\" ? <Setting></Setting> : \"\"}\r\n                            {menuSelect === \"change\" ? <Change></Change> : \"\"}\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n",["133","134"],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\User.js",["135","136","137","138","139"],"import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useState, useEffect } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction User({ setUser, loggedInStatus, user, setLoggedInStatus }) {\r\n\r\n    const [errMes, setErrMes] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const Update_user = () => {\r\n        // alert('Error: ' + password + repeatPassword);\r\n\r\n        // if (password === repeatPassword) {\r\n        //     setErrMes('')\r\n        //     getUser()\r\n        //     if (userId !== \"\") {\r\n        //         alert('userId: ' + userId + 'username: ' + username + 'email: ' + email + 'cash: ' + cash);\r\n\r\n        //         //   history.push('/profile')\r\n        //     }\r\n        // } else {\r\n        //     setErrMes('Error: Password does not match repeat Password')\r\n        //     alert(errMes);\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n    const UsernameChange = (event) => {\r\n        user.username = user.username + event.target.value\r\n        console.log(user.username)\r\n    }\r\n\r\n\r\n    const EmailChange = (event) => {\r\n        user.email = event.target.value\r\n        console.log(user.email)\r\n    }\r\n\r\n\r\n    const zip_code_Change = (event) => {\r\n        user.zip_code = event.target.value\r\n        console.log(user.zip_code)\r\n    }\r\n\r\n\r\n\r\n    const user_image_Change = (event) => {\r\n        user.user_image = event.target.value\r\n        console.log(user.user_image)\r\n    }\r\n\r\n\r\n    const state_Change = (event) => {\r\n        user.state = event.target.value\r\n        console.log(user.state)\r\n    }\r\n\r\n\r\n\r\n    const moneyType_Change = (event) => {\r\n        user.moneyType = event.target.value\r\n        console.log(user.moneyType)\r\n    }\r\n\r\n\r\n\r\n    const lastName_Change = (event) => {\r\n        user.lastName = event.target.value\r\n        console.log(user.lastName)\r\n    }\r\n\r\n\r\n\r\n    const firstName_Change = (event) => {\r\n        user.firstName = event.target.value\r\n        console.log(user.firstName)\r\n    }\r\n\r\n\r\n\r\n    const city_Change = (event) => {\r\n        user.city = event.target.value\r\n        console.log(user.city)\r\n    }\r\n\r\n\r\n\r\n    const address_line_2_Change = (event) => {\r\n        user.address_line_2 = event.target.value\r\n        console.log(user.address_line_2)\r\n    }\r\n\r\n\r\n\r\n    const address_line_1_Change = (event) => {\r\n        user.address_line_1 = event.target.value\r\n        console.log(user.address_line_1)\r\n    }\r\n\r\n\r\n    const BioChange = (event) => {\r\n        user.bio = event.target.value\r\n        console.log(user.bio)\r\n    }\r\n\r\n\r\n    //api\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            // setErrMes(response.text())\r\n            if (response.status === 400) {\r\n\r\n                const msg1 = response.json().then(msg => {\r\n                    // console.log(msg.msg);\r\n                    setErrMes(msg.msg)\r\n                })\r\n\r\n                //  console.log(\"Fetch error 400 \", msg1);\r\n                return response.statusText\r\n            }\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n    const getUpdateUserUrl = \"http://localhost:5000/api/user/updateuser/\";\r\n    const UpdateUser = async () => {\r\n        const data = {\r\n            username: user.username,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            email: user.email,\r\n            moneyType: user.moneyType,\r\n            address_line_1: user.address_line_1,\r\n            address_line_2: user.address_line_2,\r\n            city: user.city,\r\n            state: user.state,\r\n            zip_code: user.zip_code,\r\n            bio: user.bio,\r\n            user_image: user.user_image\r\n        }\r\n        const res = await fetch(getUpdateUserUrl, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n        ).then(handleErrors).then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                user = data\r\n                //  setUserId(data._id)\r\n                // setUsername(data.username)\r\n                // //setCash(data.cash)\r\n                // setMoneyType(data.moneyType)\r\n                // setEmail(data.email)\r\n                // setFirstName(data.firstName)\r\n                // setLastName(data.lastName)\r\n                // setAddress_line_1(data.address_line_1)\r\n                // setAddress_line_2(data.address_line_2)\r\n                // setCity(data.city)\r\n                // setState(data.state)\r\n                // setZip_code(data.zip_code)\r\n                // setBio(data.bio)\r\n                // setUser_image(data.user_image)\r\n\r\n\r\n\r\n            },\r\n            )\r\n            .catch((error) => {\r\n                // console.error('Error:', error);\r\n\r\n                if (typeof error.json === \"function\") {\r\n                    error.json().then(jsonError => {\r\n                        console.log(\"Json error from API\");\r\n                        console.log(jsonError);\r\n                    }).catch(genericError => {\r\n                        console.log(\"Generic error from API\");\r\n                        console.log(error.statusText);\r\n                    });\r\n                } else {\r\n                    //  console.log(\"Fetch error\");\r\n                    //  console.log(error);\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <!-- Website Overview --> */}\r\n            <div className=\"card card-default\">\r\n                <div className=\"card-heading main-color-bg\">\r\n                    <h3 className=\"card-title\">Website Overview {user.userId}</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row \">\r\n                        <div className=\"alert-danger\">{errMes}</div>\r\n                        <Form className=\"\" onSubmit={() => Update_user} >\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"Username\" className=\"col\">\r\n                                    <Form.Label className=\"sr-only\">Display Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Username\"\r\n                                        name=\"Username\"\r\n                                        required\r\n                                        aria-label=\"Username\"\r\n                                        minLength=\"3\"\r\n                                        maxLength=\"30\"\r\n                                        value={user.username}\r\n                                        title=\"Must contain at least 3-30 characters\"\r\n                                        aria-describedby=\"basic-addon1\"\r\n                                        onChange={UsernameChange}\r\n                                    // onChange={this.handleInput1Change}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"email\" className=\"col\">\r\n                                    <Form.Label\r\n                                        className=\"sr-only\">Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        required\r\n                                        minLength=\"5\"\r\n                                        maxLength=\"50\"\r\n                                        value={user.email}\r\n                                        title=\"Must contain at least 5 characters\"\r\n                                        name=\"email\" onChange={EmailChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"bio\" className=\"col\">\r\n                                    <Form.Label>Enter something about you</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={10}\r\n                                        value={user.bio}\r\n                                        onChange={BioChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"address_line_1\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Address Line 1\"\r\n                                        name=\"address_line_1\"\r\n                                        aria-label=\"address_line_1\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        value={user.address_line_1}\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => address_line_1_Change} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"address_line_2\" className=\"col\">\r\n\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Address Line 2\"\r\n                                        name=\"address_line_2\"\r\n                                        aria-label=\"address_line_2\"\r\n                                        maxLength=\"200\"\r\n                                        value={user.address_line_2}\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => address_line_2_Change} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"city\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter City\"\r\n                                        name=\"city\"\r\n                                        aria-label=\"city\"\r\n                                        maxLength=\"200\"\r\n                                        value={user.city}\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => city_Change} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"firstName\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter First Name\"\r\n                                        name=\"firstName\"\r\n                                        aria-label=\"firstName\"\r\n                                        maxLength=\"200\"\r\n                                        value={user.firstName}\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => firstName_Change} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"lastName\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Last Name\"\r\n                                        name=\"lastName\"\r\n                                        aria-label=\"lastName\"\r\n                                        maxLength=\"200\"\r\n                                        value={user.lastName}\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => lastName_Change} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {/* <Form.Row>\r\n                                <Form.Group controlId=\"moneyType\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"moneyType\"\r\n                                        name=\"moneyType\"\r\n                                        aria-label=\"moneyType\"\r\n                                        maxLength=\"200\"\r\n                                        value={moneyType}\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => moneyType_Change} />\r\n                                </Form.Group>\r\n                            </Form.Row> */}\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"state\" className=\"col\">\r\n\r\n\r\n                                    <select name=\"bill-state\" className=\"form-select\" aria-label=\"select state\" onChange={() => state_Change} value={user.state}><option value=\"\">Select State</option><option value=\"AK\">AK</option><option value=\"AL\">AL</option><option value=\"AR\">AR</option><option value=\"AZ\">AZ</option><option value=\"CA\">CA</option><option value=\"CO\">CO</option><option value=\"CT\">CT</option><option value=\"DC\">DC</option><option value=\"DE\">DE</option><option value=\"FL\">FL</option><option value=\"GA\">GA</option><option value=\"HI\">HI</option><option value=\"IA\">IA</option><option value=\"ID\">ID</option><option value=\"IL\">IL</option><option value=\"IN\">IN</option><option value=\"KS\">KS</option><option value=\"KY\">KY</option><option value=\"LA\">LA</option><option value=\"MA\">MA</option><option value=\"MD\">MD</option><option value=\"ME\">ME</option><option value=\"MI\">MI</option><option value=\"MN\">MN</option><option value=\"MO\">MO</option><option value=\"MS\">MS</option><option value=\"MT\">MT</option><option value=\"NC\">NC</option><option value=\"ND\">ND</option><option value=\"NE\">NE</option><option value=\"NH\">NH</option><option value=\"NJ\">NJ</option><option value=\"NM\">NM</option><option value=\"NV\">NV</option><option value=\"NY\">NY</option><option value=\"OH\">OH</option><option value=\"OK\">OK</option><option value=\"OR\">OR</option><option value=\"PA\">PA</option><option value=\"RI\">RI</option><option value=\"SC\">SC</option><option value=\"SD\">SD</option><option value=\"TN\">TN</option><option value=\"TX\">TX</option><option value=\"UT\">UT</option><option value=\"VA\">VA</option><option value=\"VT\">VT</option><option value=\"WA\">WA</option><option value=\"WI\">WI</option><option value=\"WV\">WV</option><option value=\"WY\">WY</option><option value=\"AA\">AA</option><option value=\"AE\">AE</option><option value=\"AP\">AP</option><option value=\"AS\">AS</option><option value=\"FM\">FM</option><option value=\"GU\">GU</option><option value=\"MH\">MH</option><option value=\"MP\">MP</option><option value=\"PR\">PR</option><option value=\"PW\">PW</option><option value=\"VI\">VI</option></select>\r\n\r\n\r\n\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"User Image\"\r\n                                        name=\"user_image\"\r\n                                        aria-label=\"user image\"\r\n                                        value={user.user_image}\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => user_image_Change} />\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"formFile\" className=\"form-label\">Select User Image</label>\r\n                                        <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={() => user_image_Change} value={user.user_image} />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n\r\n\r\n\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"zip_code\" className=\"col\">\r\n\r\n                                    <Form.Control type=\"text\"\r\n                                        pattern=\"^(?(^00000(|-0000))|(\\d{5}(|-\\d{4})))$\"\r\n                                        placeholder=\"Enter Zip Code\"\r\n                                        name=\"zip code\"\r\n                                        aria-label=\"zip code\"\r\n                                        maxLength=\"15\"\r\n                                        value={user.zip_code}\r\n                                        title=\"Max 15 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => zip_code_Change}\r\n\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid zip.\r\n          </Form.Control.Feedback>\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"submit\" className=\"text-center mb-0 d-grid gap-2 \">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Update User\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User",["140","141"],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Setting.js",["142","143","144"],"import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useState, useEffect } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Setting({ email, cash, moneyType, userId, setCash, setemail, username, setUsername, setuserId, setMoneyType }) {\r\n    const Register = (event) => {\r\n\r\n    }\r\n\r\n\r\n    const UsernameChange = (event) => {\r\n        //   setusername1(event.target.value)\r\n    }\r\n\r\n\r\n    const EmailChange = (event) => {\r\n        //   setemail1(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <!-- Website Overview --> */}\r\n            <div className=\"card card-default\">\r\n                <div className=\"card-heading main-color-bg\">\r\n                    <h3 className=\"card-title\">Setting</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row \">\r\n\r\n                        <Form className=\"\" onSubmit={() => Register} >\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"Username\" className=\"col\">\r\n                                    <Form.Label className=\"sr-only\">Display Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"User Name\"\r\n                                        name=\"Username\"\r\n                                        required\r\n                                        aria-label=\"Username\"\r\n                                        minLength=\"3\"\r\n                                        maxLength=\"30\"\r\n                                        title=\"Must contain at least 3-30 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"email\" className=\"col\">\r\n                                    <Form.Label\r\n                                        className=\"sr-only\">Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        required\r\n                                        minLength=\"5\"\r\n                                        maxLength=\"50\"\r\n                                        title=\"Must contain at least 5 characters\"\r\n                                        name=\"email\" onChange={() => EmailChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"bio\"\r\n                                        name=\"bio\"\r\n                                        aria-label=\"bio\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"address_line_1\"\r\n                                        name=\"address_line_1\"\r\n                                        aria-label=\"address_line_1\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"address_line_2\"\r\n                                        name=\"address_line_2\"\r\n                                        aria-label=\"address_line_2\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"city\"\r\n                                        name=\"city\"\r\n                                        aria-label=\"city\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        aria-label=\"firstName\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"lastName\"\r\n                                        name=\"lastName\"\r\n                                        aria-label=\"lastName\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"moneyType\"\r\n                                        name=\"moneyType\"\r\n                                        aria-label=\"moneyType\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"state\"\r\n                                        name=\"state\"\r\n                                        aria-label=\"state\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"user_image\"\r\n                                        name=\"user_image\"\r\n                                        aria-label=\"user_image\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"zip_code\"\r\n                                        name=\"zip_code\"\r\n                                        aria-label=\"zip_code\"\r\n                                        maxLength=\"200\"\r\n                                        title=\"Max 200 characters\"\r\n                                        aria-describedby=\"basic-addon1\" onChange={() => UsernameChange} />\r\n\r\n\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"submit\" className=\"text-center mb-0 d-grid gap-2 \">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Update User\r\n                            </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Setting",["145","146"],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Change.js",["147","148","149","150","151","152","153","154"],"import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useState, useEffect } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Change({ email, cash, moneyType, userId, setCash, setemail, username, setUsername, setuserId, setMoneyType }) {\r\n\r\n    const Register = (event) => {\r\n\r\n    }\r\n\r\n\r\n    const UsernameChange = (event) => {\r\n        //     setusername1(event.target.value)\r\n    }\r\n\r\n\r\n    const EmailChange = (event) => {\r\n        //      setemail1(event.target.value)\r\n    }\r\n\r\n    const PasswordChange = (event) => {\r\n        setpassword(event.target.value)\r\n    }\r\n\r\n    const RepeatPasswordChange = (event) => {\r\n        setrepeatPassword(event.target.value)\r\n    }\r\n\r\n    const [username1, setusername1] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [repeatPassword, setrepeatPassword] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            {/* <!-- Website Overview --> */}\r\n            <div className=\"card card-default\">\r\n                <div className=\"card-heading main-color-bg\">\r\n                    <h3 className=\"card-title\">Change</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row \">\r\n\r\n                        <Form className=\"\" onSubmit={() => Register} >\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"password\" className=\"col \">\r\n                                    <Form.Control\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        aria-label=\"Password\" aria-describedby=\"basic-addon1\"\r\n                                        name=\"password\"\r\n                                        minLength=\"6\"\r\n                                        pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30}$\"\r\n                                        title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8-30 characters\"\r\n                                        required onChange={() => PasswordChange} />\r\n                                </Form.Group></Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"RepeatPassword\" className=\"col\">\r\n                                    <Form.Control\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Repeat Password\"\r\n                                        aria-label=\"Repeat Password\" aria-describedby=\"basic-addon1\"\r\n                                        name=\"repeatPassword\"\r\n                                        required onChange={() => RepeatPasswordChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"submit\" className=\"text-center mb-0 d-grid gap-2 \">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Update Password\r\n                            </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Change",["155","156"],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Pay.js",["157"],"import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nfunction Pay({ email, cash, moneyType, userId, setCash, setemail, username, setUsername, setuserId, setMoneyType }) {\r\n\r\n    return (\r\n        <>\r\n            {/* <!-- Website Overview --> */}\r\n            <div className=\"card card-default\">\r\n                <div className=\"card-heading main-color-bg\">\r\n                    <h3 className=\"card-title\">Buy Tokens</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card  border-dark\" >\r\n                                {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                <div className=\"card-header\">\r\n                                    $10 Coins\r\n</div>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\"> $10 Coins</h5>\r\n                                    <p className=\"card-text\"></p>\r\n                                    <button href=\"#\" className=\"btn btn-primary\">Buy Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card  border-dark\" >\r\n                                {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                <div className=\"card-header\">\r\n                                    $10 Coins\r\n</div>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\"> $20 Coins</h5>\r\n                                    <p className=\"card-text\"></p>\r\n                                    <button href=\"#\" className=\"btn btn-primary\">Buy Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card  border-dark\" >\r\n                                {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                <div className=\"card-header\">\r\n                                    $10 Coins\r\n</div>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\"> $50 Coins</h5>\r\n                                    <p className=\"card-text\"></p>\r\n                                    <button href=\"#\" className=\"btn btn-primary\">Buy Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pay","D:\\code\\js\\react\\bj\\src\\reducers\\userReducer.js",[],["158","159"],"D:\\code\\js\\react\\bj\\src\\components\\page\\About.js",[],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Forgot.js",[],"D:\\code\\js\\react\\bj\\src\\components\\page\\Header.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\Help.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\Game.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"D:\\code\\js\\react\\bj\\src\\components\\game\\BetDownBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\BetUpBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\DDBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\DealBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\StandBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\SplitBtn.js",[],"D:\\code\\js\\react\\bj\\src\\components\\accounts\\Cash.js",[],"D:\\code\\js\\react\\bj\\src\\components\\game\\Dealer.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":20,"nodeType":"182","messageId":"183","endLine":1,"endColumn":29},{"ruleId":"180","severity":1,"message":"184","line":21,"column":17,"nodeType":"182","messageId":"183","endLine":21,"endColumn":25},{"ruleId":"176","replacedBy":"185"},{"ruleId":"178","replacedBy":"186"},{"ruleId":"180","severity":1,"message":"187","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":7,"column":20,"nodeType":"182","messageId":"183","endLine":7,"endColumn":29},{"ruleId":"180","severity":1,"message":"188","line":63,"column":23,"nodeType":"182","messageId":"183","endLine":63,"endColumn":27},{"ruleId":"180","severity":1,"message":"189","line":84,"column":15,"nodeType":"182","messageId":"183","endLine":84,"endColumn":18},{"ruleId":"180","severity":1,"message":"190","line":17,"column":12,"nodeType":"182","messageId":"183","endLine":17,"endColumn":17},{"ruleId":"180","severity":1,"message":"188","line":67,"column":23,"nodeType":"182","messageId":"183","endLine":67,"endColumn":27},{"ruleId":"180","severity":1,"message":"189","line":84,"column":15,"nodeType":"182","messageId":"183","endLine":84,"endColumn":18},{"ruleId":"180","severity":1,"message":"191","line":19,"column":26,"nodeType":"182","messageId":"183","endLine":19,"endColumn":41},{"ruleId":"180","severity":1,"message":"192","line":20,"column":21,"nodeType":"182","messageId":"183","endLine":20,"endColumn":31},{"ruleId":"180","severity":1,"message":"193","line":21,"column":20,"nodeType":"182","messageId":"183","endLine":21,"endColumn":29},{"ruleId":"180","severity":1,"message":"194","line":25,"column":11,"nodeType":"182","messageId":"183","endLine":25,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":104,"column":8,"nodeType":"197","endLine":104,"endColumn":10,"suggestions":"198"},{"ruleId":"176","replacedBy":"199"},{"ruleId":"178","replacedBy":"200"},{"ruleId":"180","severity":1,"message":"201","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"202","line":71,"column":11,"nodeType":"182","messageId":"183","endLine":71,"endColumn":27},{"ruleId":"180","severity":1,"message":"188","line":125,"column":23,"nodeType":"182","messageId":"183","endLine":125,"endColumn":27},{"ruleId":"180","severity":1,"message":"203","line":138,"column":11,"nodeType":"182","messageId":"183","endLine":138,"endColumn":21},{"ruleId":"180","severity":1,"message":"189","line":153,"column":15,"nodeType":"182","messageId":"183","endLine":153,"endColumn":18},{"ruleId":"176","replacedBy":"204"},{"ruleId":"178","replacedBy":"205"},{"ruleId":"180","severity":1,"message":"201","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"206","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":3,"column":20,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"176","replacedBy":"207"},{"ruleId":"178","replacedBy":"208"},{"ruleId":"180","severity":1,"message":"201","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":3,"column":20,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"180","severity":1,"message":"209","line":14,"column":11,"nodeType":"182","messageId":"183","endLine":14,"endColumn":25},{"ruleId":"180","severity":1,"message":"210","line":19,"column":11,"nodeType":"182","messageId":"183","endLine":19,"endColumn":22},{"ruleId":"180","severity":1,"message":"211","line":31,"column":12,"nodeType":"182","messageId":"183","endLine":31,"endColumn":21},{"ruleId":"180","severity":1,"message":"212","line":31,"column":23,"nodeType":"182","messageId":"183","endLine":31,"endColumn":35},{"ruleId":"180","severity":1,"message":"213","line":32,"column":12,"nodeType":"182","messageId":"183","endLine":32,"endColumn":20},{"ruleId":"180","severity":1,"message":"214","line":33,"column":12,"nodeType":"182","messageId":"183","endLine":33,"endColumn":26},{"ruleId":"176","replacedBy":"215"},{"ruleId":"178","replacedBy":"216"},{"ruleId":"180","severity":1,"message":"201","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"176","replacedBy":"217"},{"ruleId":"178","replacedBy":"218"},{"ruleId":"180","severity":1,"message":"219","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":11},{"ruleId":"180","severity":1,"message":"220","line":13,"column":8,"nodeType":"182","messageId":"183","endLine":13,"endColumn":18},{"ruleId":"180","severity":1,"message":"221","line":32,"column":12,"nodeType":"182","messageId":"183","endLine":32,"endColumn":16},{"ruleId":"180","severity":1,"message":"222","line":32,"column":18,"nodeType":"182","messageId":"183","endLine":32,"endColumn":25},{"ruleId":"180","severity":1,"message":"223","line":36,"column":12,"nodeType":"182","messageId":"183","endLine":36,"endColumn":16},{"ruleId":"180","severity":1,"message":"224","line":36,"column":18,"nodeType":"182","messageId":"183","endLine":36,"endColumn":25},{"ruleId":"180","severity":1,"message":"225","line":37,"column":23,"nodeType":"182","messageId":"183","endLine":37,"endColumn":35},{"ruleId":"180","severity":1,"message":"226","line":38,"column":12,"nodeType":"182","messageId":"183","endLine":38,"endColumn":20},{"ruleId":"180","severity":1,"message":"227","line":38,"column":22,"nodeType":"182","messageId":"183","endLine":38,"endColumn":33},{"ruleId":"180","severity":1,"message":"228","line":61,"column":20,"nodeType":"182","messageId":"183","endLine":61,"endColumn":29},{"ruleId":"180","severity":1,"message":"188","line":77,"column":23,"nodeType":"182","messageId":"183","endLine":77,"endColumn":27},{"ruleId":"180","severity":1,"message":"189","line":102,"column":15,"nodeType":"182","messageId":"183","endLine":102,"endColumn":18},{"ruleId":"180","severity":1,"message":"189","line":148,"column":15,"nodeType":"182","messageId":"183","endLine":148,"endColumn":18},{"ruleId":"180","severity":1,"message":"229","line":189,"column":13,"nodeType":"182","messageId":"183","endLine":189,"endColumn":24},{"ruleId":"180","severity":1,"message":"230","line":190,"column":13,"nodeType":"182","messageId":"183","endLine":190,"endColumn":16},{"ruleId":"180","severity":1,"message":"231","line":192,"column":13,"nodeType":"182","messageId":"183","endLine":192,"endColumn":24},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setTitle' is assigned a value but never used.",["232"],["233"],"'FaQuestionCircle' is defined but never used.","'msg1' is assigned a value but never used.","'res' is assigned a value but never used.","'users' is assigned a value but never used.","'setProfilePlace' is assigned a value but never used.","'setMenuAct' is assigned a value but never used.","'setMenuNo' is assigned a value but never used.","'checkCash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'profilePlace', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["234"],["232"],["233"],"'Container' is defined but never used.","'moneyType_Change' is assigned a value but never used.","'UpdateUser' is assigned a value but never used.",["232"],["233"],"'useState' is defined but never used.",["232"],["233"],"'UsernameChange' is assigned a value but never used.","'EmailChange' is assigned a value but never used.","'username1' is assigned a value but never used.","'setusername1' is assigned a value but never used.","'password' is assigned a value but never used.","'repeatPassword' is assigned a value but never used.",["232"],["233"],["232"],["233"],"'Bet' is defined but never used.","'SplitPlane' is defined but never used.","'game' is assigned a value but never used.","'setGame' is assigned a value but never used.","'cash' is assigned a value but never used.","'setCash' is assigned a value but never used.","'setMoneyType' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setdpicA1' is assigned a value but never used.","'hit_counter' is assigned a value but never used.","'row' is assigned a value but never used.","'getNextCard' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},"Update the dependencies array to be: [history, profilePlace, user]",{"range":"237","text":"238"},[2796,2798],"[history, profilePlace, user]"]